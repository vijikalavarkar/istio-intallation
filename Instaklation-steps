# 1. Download Istio
curl -L https://istio.io/downloadIstio | sh -

# 2. Move to the Istio package directory. For example, if the package is istio-1.24.2:
cd istio-1.24.2

# 3. Add the istioctl client to your path (Linux or macOS):
export PATH=$PWD/bin:$PATH

# Install Istio
1. Install Istio using the demo profile, without any gateways:
istioctl install --set profile=demo -y

# Add a namespace label to instruct Istio to automatically inject Envoy sidecar proxies when you deploy your application later:
kubectl label namespace default istio-injection=enabled

# Deploy the sample application
# Deploy the Bookinfo sample application:
kubectl apply -f https://raw.githubusercontent.com/istio/istio/release-1.24/samples/bookinfo/platform/kube/bookinfo.yaml

# The application will start. As each pod becomes ready, the Istio sidecar will be deployed along with it.
kubectl get services
and
kubectl get pods

# Validate that the app is running inside the cluster by checking for the page title in the response:
kubectl exec "$(kubectl get pod -l app=ratings -o jsonpath='{.items[0].metadata.name}')" -c ratings -- curl -sS productpage:9080/productpage | grep -o "<title>.*</title>"

# Open the application to outside traffic
# Make sure CRD installed first if its not download from here [ standard one ]
https://github.com/kubernetes-sigs/gateway-api/releases/tag/v1.2.1

# Create a Kubernetes Gateway for the Bookinfo application:
kubectl apply -f samples/bookinfo/gateway-api/bookinfo-gateway.yaml

# for validation
istioctl analyze


# get service - load balancer
kubectl get svc istio-ingressgateway -n istio-system

# port forwarding
kubectl port-forward svc/kiali -n istio-system 2000
